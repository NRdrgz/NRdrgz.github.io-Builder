{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasr/Documents/GitHub/NRdrgz.github.io-Builder/src/containers/experienceAccordion/ExperienceAccordion.js\";\nimport React, { Component } from \"react\";\nimport ExperienceCard from \"../../components/experienceCard/ExperienceCard.js\";\nimport \"./ExperienceAccordion.css\";\nimport { Accordion, Panel } from \"baseui/accordion\";\n\nclass ExperienceAccordion extends Component {\n  constructor(props) {\n    super(props); // Initialize the state with all sections expanded\n\n    this.state = {\n      expanded: props.sections.map(section => section.title)\n    };\n  }\n\n  render() {\n    const theme = this.props.theme;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"experience-accord\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      expanded: this.state.expanded,\n      onChange: ({\n        key\n      }) => {// Optionally handle any changes here\n        // Since you want all panels always open, you might not need to do anything here\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, this.props.sections.map(section => {\n      return /*#__PURE__*/React.createElement(Panel, {\n        className: \"accord-panel\",\n        title: section[\"title\"],\n        key: section[\"title\"],\n        overrides: {\n          Header: {\n            style: () => ({\n              backgroundColor: `${theme.body}`,\n              border: `1px solid`,\n              borderRadius: `5px`,\n              borderColor: `${theme.headerColor}`,\n              marginBottom: `3px`,\n              fontFamily: \"Google Sans Regular\",\n              color: `${theme.text}`,\n              \":hover\": {\n                color: `${theme.secondaryText}`\n              }\n            })\n          },\n          Content: {\n            style: () => ({\n              backgroundColor: `${theme.body}`\n            })\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }, section[\"experiences\"].map((experience, index) => {\n        return /*#__PURE__*/React.createElement(ExperienceCard, {\n          index: index,\n          totalCards: section[\"experiences\"].length,\n          experience: experience,\n          theme: theme,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }\n        });\n      }));\n    })));\n  }\n\n}\n\nexport default ExperienceAccordion;","map":{"version":3,"sources":["/Users/nicolasr/Documents/GitHub/NRdrgz.github.io-Builder/src/containers/experienceAccordion/ExperienceAccordion.js"],"names":["React","Component","ExperienceCard","Accordion","Panel","ExperienceAccordion","constructor","props","state","expanded","sections","map","section","title","render","theme","key","Header","style","backgroundColor","body","border","borderRadius","borderColor","headerColor","marginBottom","fontFamily","color","text","secondaryText","Content","experience","index","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAO,2BAAP;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,kBAAjC;;AAEA,MAAMC,mBAAN,SAAkCJ,SAAlC,CAA4C;AAC1CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEF,KAAK,CAACG,QAAN,CAAeC,GAAf,CAAmBC,OAAO,IAAIA,OAAO,CAACC,KAAtC;AADC,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,KAAKR,KAAL,CAAWQ,KAAzB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWC,QADvB;AAEE,MAAA,QAAQ,EAAE,CAAC;AAAEO,QAAAA;AAAF,OAAD,KAAa,CACrB;AACA;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,KAAKT,KAAL,CAAWG,QAAX,CAAoBC,GAApB,CAAyBC,OAAD,IAAa;AACpC,0BACE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,KAAK,EAAEA,OAAO,CAAC,OAAD,CAFhB;AAGE,QAAA,GAAG,EAAEA,OAAO,CAAC,OAAD,CAHd;AAIE,QAAA,SAAS,EAAE;AACTK,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE,OAAO;AACZC,cAAAA,eAAe,EAAG,GAAEJ,KAAK,CAACK,IAAK,EADnB;AAEZC,cAAAA,MAAM,EAAG,WAFG;AAGZC,cAAAA,YAAY,EAAG,KAHH;AAIZC,cAAAA,WAAW,EAAG,GAAER,KAAK,CAACS,WAAY,EAJtB;AAKZC,cAAAA,YAAY,EAAG,KALH;AAMZC,cAAAA,UAAU,EAAE,qBANA;AAOZC,cAAAA,KAAK,EAAG,GAAEZ,KAAK,CAACa,IAAK,EAPT;AAQZ,wBAAU;AACRD,gBAAAA,KAAK,EAAG,GAAEZ,KAAK,CAACc,aAAc;AADtB;AARE,aAAP;AADD,WADC;AAeTC,UAAAA,OAAO,EAAE;AACPZ,YAAAA,KAAK,EAAE,OAAO;AACZC,cAAAA,eAAe,EAAG,GAAEJ,KAAK,CAACK,IAAK;AADnB,aAAP;AADA;AAfA,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA0BGR,OAAO,CAAC,aAAD,CAAP,CAAuBD,GAAvB,CAA2B,CAACoB,UAAD,EAAaC,KAAb,KAAuB;AACjD,4BACE,oBAAC,cAAD;AAAgB,UAAA,KAAK,EAAEA,KAAvB;AAA8B,UAAA,UAAU,EAAEpB,OAAO,CAAC,aAAD,CAAP,CAAuBqB,MAAjE;AAAyE,UAAA,UAAU,EAAEF,UAArF;AAAiG,UAAA,KAAK,EAAEhB,KAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,OAJA,CA1BH,CADF;AAkCD,KAnCA,CAPH,CADF,CADF;AAgDD;;AA3DyC;;AA8D5C,eAAeV,mBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ExperienceCard from \"../../components/experienceCard/ExperienceCard.js\";\nimport \"./ExperienceAccordion.css\";\nimport { Accordion, Panel } from \"baseui/accordion\";\n\nclass ExperienceAccordion extends Component {\n  constructor(props) {\n    super(props);\n    // Initialize the state with all sections expanded\n    this.state = {\n      expanded: props.sections.map(section => section.title)\n    };\n  }\n\n  render() {\n    const theme = this.props.theme;\n    return (\n      <div className=\"experience-accord\">\n        <Accordion\n          expanded={this.state.expanded}\n          onChange={({ key }) => {\n            // Optionally handle any changes here\n            // Since you want all panels always open, you might not need to do anything here\n          }}\n        >\n          {this.props.sections.map((section) => {\n            return (\n              <Panel\n                className=\"accord-panel\"\n                title={section[\"title\"]}\n                key={section[\"title\"]}\n                overrides={{\n                  Header: {\n                    style: () => ({\n                      backgroundColor: `${theme.body}`,\n                      border: `1px solid`,\n                      borderRadius: `5px`,\n                      borderColor: `${theme.headerColor}`,\n                      marginBottom: `3px`,\n                      fontFamily: \"Google Sans Regular\",\n                      color: `${theme.text}`,\n                      \":hover\": {\n                        color: `${theme.secondaryText}`,\n                      },\n                    }),\n                  },\n                  Content: {\n                    style: () => ({\n                      backgroundColor: `${theme.body}`,\n                    }),\n                  },\n                }}\n              >\n                {section[\"experiences\"].map((experience, index) => {\n                  return (\n                    <ExperienceCard index={index} totalCards={section[\"experiences\"].length} experience={experience} theme={theme} />\n                  );\n                })}\n              </Panel>\n            );\n          })}\n        </Accordion>\n      </div>\n    );\n  }\n}\n\nexport default ExperienceAccordion;\n"]},"metadata":{},"sourceType":"module"}