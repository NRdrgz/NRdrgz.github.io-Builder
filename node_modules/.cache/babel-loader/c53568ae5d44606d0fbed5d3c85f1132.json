{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasr/Documents/GitHub/NRdrgz.github.io-Builder/src/containers/experienceAccordion/ExperienceAccordion.js\";\nimport React, { Component } from \"react\";\nimport ExperienceCard from \"../../components/experienceCard/ExperienceCard.js\";\nimport \"./ExperienceAccordion.css\";\nimport { Accordion, Panel } from \"baseui/accordion\";\n\nclass ExperienceAccordion extends Component {\n  render() {\n    const theme = this.props.theme;\n    const initialExpanded = this.props.sections.map(section => section.title); // Prepare initialExpanded array with all section titles\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"experience-accord\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      initialState: {\n        expanded: initialExpanded\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, this.props.sections.map(section => {\n      return /*#__PURE__*/React.createElement(Panel, {\n        className: \"accord-panel\",\n        title: section[\"title\"],\n        key: section[\"title\"],\n        overrides: {\n          Header: {\n            style: () => ({\n              backgroundColor: `${theme.body}`,\n              border: `1px solid`,\n              borderRadius: `5px`,\n              borderColor: `${theme.headerColor}`,\n              marginBottom: `3px`,\n              fontFamily: \"Google Sans Regular\",\n              color: `${theme.text}`,\n              \":hover\": {\n                color: `${theme.secondaryText}`\n              }\n            })\n          },\n          Content: {\n            style: () => ({\n              backgroundColor: `${theme.body}`\n            })\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 15\n        }\n      }, section[\"experiences\"].map((experience, index) => {\n        return /*#__PURE__*/React.createElement(ExperienceCard, {\n          index: index,\n          totalCards: section[\"experiences\"].length,\n          experience: experience,\n          theme: theme,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }\n        });\n      }));\n    })));\n  }\n\n}\n\nexport default ExperienceAccordion;","map":{"version":3,"sources":["/Users/nicolasr/Documents/GitHub/NRdrgz.github.io-Builder/src/containers/experienceAccordion/ExperienceAccordion.js"],"names":["React","Component","ExperienceCard","Accordion","Panel","ExperienceAccordion","render","theme","props","initialExpanded","sections","map","section","title","expanded","Header","style","backgroundColor","body","border","borderRadius","borderColor","headerColor","marginBottom","fontFamily","color","text","secondaryText","Content","experience","index","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAO,2BAAP;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,kBAAjC;;AAEA,MAAMC,mBAAN,SAAkCJ,SAAlC,CAA4C;AAC1CK,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAzB;AACA,UAAME,eAAe,GAAG,KAAKD,KAAL,CAAWE,QAAX,CAAoBC,GAApB,CAAwBC,OAAO,IAAIA,OAAO,CAACC,KAA3C,CAAxB,CAFO,CAEoE;;AAE3E,wBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE;AAAEC,QAAAA,QAAQ,EAAEL;AAAZ,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWE,QAAX,CAAoBC,GAApB,CAAyBC,OAAD,IAAa;AACpC,0BACE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,KAAK,EAAEA,OAAO,CAAC,OAAD,CAFhB;AAGE,QAAA,GAAG,EAAEA,OAAO,CAAC,OAAD,CAHd;AAIE,QAAA,SAAS,EAAE;AACTG,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE,OAAO;AACZC,cAAAA,eAAe,EAAG,GAAEV,KAAK,CAACW,IAAK,EADnB;AAEZC,cAAAA,MAAM,EAAG,WAFG;AAGZC,cAAAA,YAAY,EAAG,KAHH;AAIZC,cAAAA,WAAW,EAAG,GAAEd,KAAK,CAACe,WAAY,EAJtB;AAKZC,cAAAA,YAAY,EAAG,KALH;AAMZC,cAAAA,UAAU,EAAE,qBANA;AAOZC,cAAAA,KAAK,EAAG,GAAElB,KAAK,CAACmB,IAAK,EAPT;AAQZ,wBAAU;AACRD,gBAAAA,KAAK,EAAG,GAAElB,KAAK,CAACoB,aAAc;AADtB;AARE,aAAP;AADD,WADC;AAeTC,UAAAA,OAAO,EAAE;AACPZ,YAAAA,KAAK,EAAE,OAAO;AACZC,cAAAA,eAAe,EAAG,GAAEV,KAAK,CAACW,IAAK;AADnB,aAAP;AADA;AAfA,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA0BGN,OAAO,CAAC,aAAD,CAAP,CAAuBD,GAAvB,CAA2B,CAACkB,UAAD,EAAaC,KAAb,KAAuB;AACjD,4BACE,oBAAC,cAAD;AAAgB,UAAA,KAAK,EAAEA,KAAvB;AAA8B,UAAA,UAAU,EAAElB,OAAO,CAAC,aAAD,CAAP,CAAuBmB,MAAjE;AAAyE,UAAA,UAAU,EAAEF,UAArF;AAAiG,UAAA,KAAK,EAAEtB,KAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,OAJA,CA1BH,CADF;AAkCD,KAnCA,CADH,CADF,CADF;AA0CD;;AA/CyC;;AAkD5C,eAAeF,mBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ExperienceCard from \"../../components/experienceCard/ExperienceCard.js\";\nimport \"./ExperienceAccordion.css\";\nimport { Accordion, Panel } from \"baseui/accordion\";\n\nclass ExperienceAccordion extends Component {\n  render() {\n    const theme = this.props.theme;\n    const initialExpanded = this.props.sections.map(section => section.title); // Prepare initialExpanded array with all section titles\n\n    return (\n      <div className=\"experience-accord\">\n        <Accordion initialState={{ expanded: initialExpanded }}>\n          {this.props.sections.map((section) => {\n            return (\n              <Panel\n                className=\"accord-panel\"\n                title={section[\"title\"]}\n                key={section[\"title\"]}\n                overrides={{\n                  Header: {\n                    style: () => ({\n                      backgroundColor: `${theme.body}`,\n                      border: `1px solid`,\n                      borderRadius: `5px`,\n                      borderColor: `${theme.headerColor}`,\n                      marginBottom: `3px`,\n                      fontFamily: \"Google Sans Regular\",\n                      color: `${theme.text}`,\n                      \":hover\": {\n                        color: `${theme.secondaryText}`,\n                      },\n                    }),\n                  },\n                  Content: {\n                    style: () => ({\n                      backgroundColor: `${theme.body}`,\n                    }),\n                  },\n                }}\n              >\n                {section[\"experiences\"].map((experience, index) => {\n                  return (\n                    <ExperienceCard index={index} totalCards={section[\"experiences\"].length} experience={experience} theme={theme} />\n                  );\n                })}\n              </Panel>\n            );\n          })}\n        </Accordion>\n      </div>\n    );\n  }\n}\n\nexport default ExperienceAccordion;\n"]},"metadata":{},"sourceType":"module"}